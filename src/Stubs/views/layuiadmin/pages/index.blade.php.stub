@extends('{{module}}::base')

@section('content_before')
    <div class="layui-card layadmin-header">
        <div class="layui-breadcrumb" lay-filter="breadcrumb">
          <a lay-href="">主页</a>
          <a><cite>组件</cite></a>
          <a><cite>数据表格</cite></a>
          <a><cite>数据操作</cite></a>
        </div>
      </div>
@endsection

@section('content')
    <div class="layui-row layui-col-space15">
        <div class="layui-col-md12">

            <div class="layui-card">
                <div class="layui-form layui-card-header layuiadmin-card-header-auto">
                    <div class="layui-form-item">

                        {{table_search_content}}

                        <div class="layui-inline">
                            <button class="layui-btn layuiadmin-btn-useradmin" lay-submit="" lay-filter="LAY-user-search">
                                <i class="layui-icon layui-icon-search layuiadmin-button-btn"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <div class="layui-card-body">
                    <script type="text/html" id="toolbar">
                        <button class="layui-btn layui-btn-sm" lay-event="batchdel">删除</button>
                        <button class="layui-btn layui-btn-sm" lay-event="add">添加</button>
                    </script>

                    <script type="text/html" id="options">
                        <a class="layui-btn layui-btn-xs" lay-event="detail">查看</a>
                        <a class="layui-btn layui-btn-xs" lay-event="edit" data-id="@{{d.id}}">编辑</a>
                        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
                    </script>

                    <table class="layui-table" id="dataTable" lay-filter="dataTable"></table>
                </div>
            </div>
        </div>
    </div>
@endsection

@section('script')
    <script>
        layui.use(['index', 'table', 'admin', 'form'], function () {
            const table = layui.table;
            const $ = layui.$;
            const admin = layui.admin;
            const form = layui.form;

            const mainTable = table.render({
                elem: '#dataTable'
                , height: 'full-130'
                , url: '{{ route("{{module}}.{{models}}.index") }}'
                , toolbar : '#toolbar'
                , cols: [[ //表头
                    {checkbox: true,fixed: true},
                    {{table_header_col}}
                    {title: "操作", width: 150, align: 'center', fixed: 'right', toolbar: '#options'}
                ]]
                , page: true
            });

            form.on('submit(LAY-user-search)', function (data) {
                const field = data.field;
                let search = [];
                let searchFields = [];
                Object.keys(field).forEach( k => field[k] && search.push(`${k}:${field[k]}`) && searchFields.push(`${k}:like`));
                search = search.join(';');
                searchFields = searchFields.join(';');
                table.reload('dataTable', {
                    where: {
                        search : search,
                        searchFields : searchFields,
                        searchJoin : 'and'
                    }
                });
            });

            //监听工具条
            table.on('tool(dataTable)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                const rowdata = obj.data; //获得当前行数据
                const layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                const tr = obj.tr; //获得当前行 tr 的DOM对象

                if (layEvent === 'detail') { //查看
                    layer.open({
                        type: 2,
                        title: "查看{{model}}",
                        content: `/{{module}}/{{models}}/${rowdata.id}`,
                        area: ["800px", "600px"],
                        btn: ["关闭"]
                    });
                } else if (layEvent === 'del') { //删除
                    layer.confirm('真的删除行么', function (index) {
                        //向服务端发送删除指令
                        admin.req({
                            type : 'DELETE',
                            url: `/{{module}}/{{models}}/${rowdata.id}`,
                            success : function(data){
                                obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
                                layer.close(index);
                            }
                        });
                    });
                } else if (layEvent === 'edit') { //编辑
                    layer.open({
                        type: 2,
                        title: "编辑{{model}}",
                        content: `/{{module}}/{{models}}/${rowdata.id}/edit`,
                        area: ["800px", "600px"],
                        btn: ["确定", "取消"],
                        yes: function (index, layero) {
                            const iframeWindow = window['layui-layer-iframe' + index];
                            const submit_button_id = "LAY-user-submit";
                            const submit_button = layero.find("iframe").contents().find("#" + submit_button_id);
                            iframeWindow.layui.form.on("submit(" + submit_button_id + ")", function (data) {
                                const field = data.field;
                                admin.req({
                                    type : 'PUT',
                                    url: `/{{module}}/{{models}}/${rowdata.id}`,
                                    data : field,
                                    success : function(data){
                                        obj.update(data.data);
                                        layer.close(index);
                                    }
                                });
                                return false;
                            });
                            submit_button.trigger("click")
                        },
                        success: function (e, t) {
                            const submit_button = e.find("iframe").contents().find("#LAY-user-submit");
                            submit_button.closest('div.layui-layout-admin').hide();
                        }
                    });
                }
            });

            //事件
            const toolbarEvent = {
                batchdel: function () {
                    const checkStatus = table.checkStatus('dataTable');
                    const checkData = checkStatus.data; //得到选中的数据

                    if (checkData.length === 0) {
                        return layer.msg('请选择数据');
                    }

                    layer.confirm('确定删除吗？', function (index) {
                        const ids = checkData.map( item => item.id );
                        admin.req({
                            type : 'post',
                            url: "{{ route('{{module}}.{{models}}.batch_destroy') }}",
                            data : {ids},
                            success : function(data){
                                table.reload('dataTable');
                                layer.msg('已删除');
                            }
                        });
                    });
                },
                add: function () {
                    layer.open({
                        type: 2,
                        title: "添加{{model}}",
                        content: "/{{module}}/{{models}}/create",
                        area: ["800px", "600px"],
                        btn: ["确定", "取消"],
                        yes: function (index, layero) {
                            const iframeWindow = window['layui-layer-iframe' + index];
                            const submit_button_id = "LAY-user-submit";
                            const submit_button = layero.find("iframe").contents().find("#" + submit_button_id);
                            iframeWindow.layui.form.on("submit(" + submit_button_id + ")", function (data) {
                                const field = data.field;
                                admin.req({
                                    type : 'post',
                                    url: "{{ route('{{module}}.{{models}}.store') }}",
                                    data : field,
                                    success : function(data){
                                        table.reload('dataTable');
                                        layer.close(index);
                                    }
                                });
                                return false;
                            });
                            submit_button.trigger("click")
                        },
                        success: function (e, t) {
                            const submit_button = e.find("iframe").contents().find("#LAY-user-submit");
                            submit_button.closest('div.layui-layout-admin').hide();
                        }
                    });
                }
            };
            table.on('toolbar(dataTable)', function (obj) {
                console.info('obj', obj);
                const checkStatus = table.checkStatus(obj.config.id);
                const event = obj.event;
                toolbarEvent[event] ? toolbarEvent[event].call(this) : '';
            });
        });
    </script>
@endsection